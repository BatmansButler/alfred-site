{"version":3,"sources":["auth.js","SectionsRenderer.js","externalCallStructuresHelper.js","Form.js","downloadPDFHandler.js","EndowlNavBar.js","App.js","index.js"],"names":["instanceNameEnv","process","OPENLAW_INSTANCE_NAME","INSTANCE_URL","toLowerCase","apiClientSingleton","APIClient","SectionsRenderer","children","sectionName","sectionCount","index","activeIndex","setActiveIndex","show","setShow","goNext","showBackButton","showNextButton","showDoneButton","hideModal","event","console","log","Modal","size","key","aria-labelledby","centered","length","renderTrigger","className","tabIndex","onKeyPress","onHide","ModalHeader","closeButton","ModalTitle","id","ModalBody","ModalFooter","Button","variant","onClick","ABIString","serviceName","SampleTemplateText","onValidate","validationResult","Form","compiledTemplate","Openlaw","compileTemplate","initialExecutionResult","execute","getExternalCallStructures","executionResult","initialVariables","getExecutedVariables","inputExtraTextMap","state","parameters","variables","onElementChange","value","undefined","isError","stateLifter","props","mergedParameters","errorMessage","error","setState","this","Object","keys","apiClient","onChangeFunction","openLaw","renderSections","SectionsRendererInjecter","sectionTransform","unsectionedTitle","Component","downloadPDFHandler","canvas","el","document","querySelector","pdf","jsPDF","format","html2canvas","then","c","body","appendChild","html","save","removeChild","EndowlNavbar","callback","showDataInPreview","onSetShowDataInPreview","onShowFormModal","Navbar","bg","expand","sticky","Brand","href","src","alt","height","Toggle","aria-controls","Collapse","Nav","Link","window","print","inline","FormCheck","type","label","onChange","checked","target","renderPreviewHTML","debounce","formState","agreement","getAgreements","renderForPreview","findFields","findUnfilledValue","App","useState","liftFormState","previewHTML","setPreviewHTML","view","toggleView","showHidden","setShowHidden","showFormModal","setShowFormModal","useEffect","replaceAll","dangerouslySetInnerHTML","__html","loginDetails","email","OPENLAW_EMAIL","password","OPENLAW_PASSWORD","login","catch","test","warn","attemptAuth","render","getElementById"],"mappings":"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","file":"static/js/main.5bed0377.chunk.js","sourcesContent":["/* global process */\n\nimport { APIClient } from 'openlaw';\n\n// Provide your OPENLAW_INSTANCE_NAME for logging into your OpenLaw instance.\nconst instanceNameEnv = process.env.OPENLAW_INSTANCE_NAME;\nconst INSTANCE_URL = `https://lib.openlaw.io/api/v1/${instanceNameEnv ? instanceNameEnv.toLowerCase() : 'default'}`;\n\nexport const apiClientSingleton = new APIClient(INSTANCE_URL);\n\nexport const attemptAuth = () => {\n  const loginDetails = {\n    email: process.env.OPENLAW_EMAIL || '',\n    password: process.env.OPENLAW_PASSWORD || '',\n  };\n\n  apiClientSingleton\n    .login(loginDetails.email, loginDetails.password)\n    .catch(error => {\n      if (/500/.test(error)) {\n        // eslint-disable-next-line no-undef\n        console.warn('OpenLaw APIClient: Please authenticate to the APIClient if you wish to use the Address input.');\n        return;\n      }\n\n      // eslint-disable-next-line no-undef\n      console.error('OpenLaw APIClient:', error);\n    });\n};\n\n","import React from 'react';\nimport {Modal, ModalBody, ModalFooter, ModalTitle, Button} from \"react-bootstrap\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\n\nconst SectionsRenderer = ({children, sectionName, sectionCount, index,\n                              activeIndex, setActiveIndex, show, setShow}) => {\n    const goPrev = () => setActiveIndex(activeIndex - 1);\n    const goNext = () => setActiveIndex(activeIndex + 1);\n//TODO this state needs to be stored in the Form\n    const showBackButton = index > 0;\n    const showNextButton = index < sectionCount - 1;\n    const showDoneButton = index === sectionCount - 1;\n\n    const handleEnterKeyPress = event => {\n        if (event.key === 'Enter') {\n            if (showNextButton) {\n                goNext();\n            } else if (showDoneButton) {\n                hideModal();\n            }\n        }\n    }\n\n    const hideModal = event => setShow(false);\n\n    console.log(children());\n\n    return (\n        <Modal\n            size={\"lg\"}\n            key={`card-${sectionName}`}\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            show={show && sectionName.length && index === activeIndex}\n            renderTrigger={() => (\n                <h2 className=\"sectionTrigger\" tabIndex=\"0\">\n                    {`${sectionName}`}\n                </h2>\n            )}\n            onKeyPress={handleEnterKeyPress}\n            onHide={hideModal}\n        >\n            <ModalHeader closeButton>\n                <ModalTitle id=\"contained-modal-title-vcenter\">\n                    {`${sectionName}`}\n                </ModalTitle>\n            </ModalHeader>\n            <ModalBody>\n                {children()}\n            </ModalBody>\n            <ModalFooter>\n                {showBackButton && <Button variant=\"secondary\" onClick={goPrev}>&lt; Previous</Button>}\n                {showNextButton && <Button variant=\"primary\" onClick={goNext}>Next &gt;</Button>}\n                {showDoneButton && <Button variant=\"primary\" onClick={hideModal}>Done</Button>}\n            </ModalFooter>\n        </Modal>\n\n    );\n};\n\nexport default SectionsRenderer;\n","/**\n* External Call Structure Helper\n*\n* Because we are using the variable type `ExternalSignature`\n* in our SAMPLE_TEMPLATE, any example app, or test we write\n* which uses the template needs data for an external call structure argument\n* to `Openlaw.execute()`\n*/\n\nconst ABIString =\n  '{\"input\":{\"typeDefinition\":{\"signerEmail\":{\"name\":\"signerEmail\",\"variableTypeDe'\n  + 'finition\":{\"name\":\"Text\",\"typeParameter\":null},\"description\":null,\"formatter\":nu'\n  + 'll,\"isHidden\":false,\"defaultValue\":null},\"contractContentBase64\":{\"name\":\"contra'\n  + 'ctContentBase64\",\"variableTypeDefinition\":{\"name\":\"Text\",\"typeParameter\":null},\"'\n  + 'description\":null,\"formatter\":null,\"isHidden\":false,\"defaultValue\":null},\"contra'\n  + 'ctTitle\":{\"name\":\"contractTitle\",\"variableTypeDefinition\":{\"name\":\"Text\",\"typePa'\n  + 'rameter\":null},\"description\":null,\"formatter\":null,\"isHidden\":false,\"defaultValu'\n  + 'e\":null}},\"names\":[\"signerEmail\",\"contractContentBase64\",\"contractTitle\"],\"types'\n  + '\":{\"signerEmail\":{\"name\":\"Text\"},\"contractContentBase64\":{\"name\":\"Text\"},\"contra'\n  + 'ctTitle\":{\"name\":\"Text\"}}},\"output\":{\"typeDefinition\":{\"signerEmail\":{\"name\":\"si'\n  + 'gnerEmail\",\"variableTypeDefinition\":{\"name\":\"Text\",\"typeParameter\":null},\"descri'\n  + 'ption\":null,\"formatter\":null,\"isHidden\":false,\"defaultValue\":null},\"signature\":{'\n  + '\"name\":\"signature\",\"variableTypeDefinition\":{\"name\":\"Text\",\"typeParameter\":null}'\n  + ',\"description\":null,\"formatter\":null,\"isHidden\":false,\"defaultValue\":null},\"reco'\n  + 'rdLink\":{\"name\":\"recordLink\",\"variableTypeDefinition\":{\"name\":\"Text\",\"typeParame'\n  + 'ter\":null},\"description\":null,\"formatter\":null,\"isHidden\":false,\"defaultValue\":n'\n  + 'ull}},\"names\":[\"signerEmail\",\"signature\",\"recordLink\"],\"types\":{\"signerEmail\":{\"'\n  + 'name\":\"Text\"},\"signature\":{\"name\":\"Text\"},\"recordLink\":{\"name\":\"Text\"}}}}';\n\nexport default (serviceName = 'DocuSign') => ({ [serviceName]: ABIString });\n","import React, {Component} from 'react';\nimport {Openlaw} from 'openlaw';\n\n/**\n * DO NOT DIRECTLY COPY the lines below;\n *\n * If your app is bundled and using our `esm/ lib,\n * in your app they will become:\n *   import OpenLawForm from 'openlaw-elements';\n *   import 'openlaw-elements/dist/esm/openlaw-elements.min.css';\n */\nimport OpenLawForm from 'openlaw-elements';\nimport './form-style.scss';\n\nimport {apiClientSingleton} from './auth';\nimport SectionsRenderer from './SectionsRenderer';\nimport getExternalCallStructures from './externalCallStructuresHelper.js';\nimport raw from 'raw.macro';\n\nconst SampleTemplateText = raw('./templates/letter-to-heirs.tmpl');\n\n/**\n * Examples of custom validation\n *\n * Return an errorMessage key to provide your own\n * or override & hide a validation error with an empty string.\n *\n * You can also call your other validation handlers, etc. inside here.\n */\nconst onValidate = (validationResult) => {};\n\n/**\n * Form\n *\n * NOTE: It's recommended to use a Class component as it's easier to use instance methods\n * as props for on[Event] functions which do not cause unnecessary PureComponent rendering farther down.\n * InputRenderer caches (and updates if changed) other props where necessary (e.g. inputProps).\n */\nclass Form extends Component {\n    // set some initial state values\n    compiledTemplate = Openlaw.compileTemplate(SampleTemplateText).compiledTemplate;\n    initialExecutionResult = Openlaw.execute(this.compiledTemplate, {}, {}, getExternalCallStructures()).executionResult;\n    initialVariables = Openlaw.getExecutedVariables(this.initialExecutionResult, {});\n    inputExtraTextMap = {\n        \"Your Name\": () => (\n            <div>Please enter the name you will use to sign this letter</div>\n        ),\n        \"Letter Date\": () => (\n            <p>What date do you want to use for this letter?</p>\n        ),\n        \"Accounts List\": () => (\n            <>\n                <div>Please enter your important online accounts. These might include:</div>\n                <ul>\n                    <li>Social media accounts</li>\n                    <li>Online brokerages and bank logins</li>\n                    <li>Cloud storage accounts</li>\n                    <li>Payment apps like Venmo</li>\n                </ul>\n            </>\n        ),\n        \"Cryptocurrency Advisor\": () => (\n            <>\n                Who do you recommend as a trustworthy advisor to your heirs when they have questions about cryptocurrency?\n            </>\n        ),\n        \"Wallet List\": () => (\n            <>\n                <div>\n                    List any other crypto currency wallets that you may have. These could be online accounts, phone\n                    apps, computer apps, mining accounts, and blockchain nodes.\n                </div>\n            </>\n        )\n    };\n\n\n    state = {\n        executionResult: this.initialExecutionResult,\n        parameters: {},\n        variables: this.initialVariables,\n        activeIndex: 0\n    };\n\n    componentDidMount() {\n        this.props.stateLifter(this.state);\n    }\n\n    onElementChange = (key, value, validationResult) => {\n        const {parameters} = this.state;\n        // value needs to be unset, and the current paramter value is not already unset\n        const shouldSetNewValue =\n            (value === undefined && parameters[key] !== undefined)\n                ? true\n                // things are looking reallllly good\n                : (!validationResult.isError && value !== parameters[key])\n                ? true\n                // default\n                : false;\n\n        if (!shouldSetNewValue) return;\n\n        const {stateLifter} = this.props;\n\n        const mergedParameters = {...parameters, [key]: value};\n        const {executionResult, errorMessage} = Openlaw.execute(this.compiledTemplate, {}, mergedParameters, getExternalCallStructures());\n\n        if (errorMessage) {\n            // eslint-disable-next-line no-undef\n            console.error('Openlaw Execution Error:', errorMessage);\n            return;\n        }\n\n        this.setState({\n            executionResult,\n            parameters: mergedParameters,\n            variables: Openlaw.getExecutedVariables(executionResult, {}),\n        }, () => {\n            stateLifter(this.state);\n        });\n    };\n\n    setActiveIndex = value => this.setState({activeIndex: value});\n\n    SectionsRendererInjecter() {\n        const {activeIndex} = this.state;\n        const {show, setShow} = this.props;\n        const setActiveIndex = this.setActiveIndex;\n\n        return (props) => (\n            <SectionsRenderer\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n                show={show}\n                setShow={setShow}\n                {...props}\n            />\n        );\n    }\n\n    render() {\n        const {executionResult, parameters, variables} = this.state;\n\n        return (\n            <>\n                {Object.keys(executionResult).length && (\n                    <OpenLawForm\n                        apiClient={apiClientSingleton}\n                        executionResult={executionResult}\n                        inputExtraTextMap={this.inputExtraTextMap}\n                        parameters={parameters}\n                        onChangeFunction={this.onElementChange}\n                        onValidate={onValidate}\n                        openLaw={Openlaw}\n                        renderSections={this.SectionsRendererInjecter()}\n                        sectionTransform={(sectionName, index) => {\n                            // Transform & shape your custom sections here!\n                            // See <SectionsRenderer /> for usage.\n                            return {sectionName, index};\n                        }}\n                        unsectionedTitle=\"\" // none, don't create a section\n                        variables={variables}\n                    />\n                )}\n            </>\n        );\n    }\n}\n\nexport default Form;\n","import {jsPDF} from \"jspdf\";\nimport html2canvas from \"html2canvas\";\n\n// TODO Figure out how to format the PDF correctly\nconst CANVAS_ID = \"download-canvas\";\nconst DOWNLOAD_FILENAME = \"letter-to-heirs.pdf\";\nconst CANVAS_SELECTOR = '#' + CANVAS_ID;\n\nconst downloadPDFHandler = () => {\n    const el = document.querySelector('#document');\n    const pdf = new jsPDF({\n        format: 'letter',\n    });\n    let canvas;\n\n    html2canvas(el)\n        .then(c => {\n            c.id = CANVAS_ID;\n            document.body.appendChild(c);\n            canvas = c;\n        })\n        .then(() => pdf.html(document.querySelector(CANVAS_SELECTOR)))\n        .then(() => pdf.save(DOWNLOAD_FILENAME))\n        .then(() => document.body.removeChild(canvas));\n}\n\nexport default downloadPDFHandler;\n","import React, {useState} from 'react';\nimport {Navbar, Nav, FormCheck} from \"react-bootstrap\";\nimport downloadPDFHandler from \"./downloadPDFHandler\";\n\nconst EndowlNavbar = ({showDataInPreview, onSetShowDataInPreview, onShowFormModal}) => {\n    const handleCheckbox = callback => ({target: {checked}}) => callback(checked);\n\n    return (\n        <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\">\n            <Navbar.Brand href=\"https://endowl.com\">\n                <img src=\"/letter-to-heirs/endowl.png\" alt=\"Endowl\" height=\"15\"/>\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"#\" onClick={window.print}>Print</Nav.Link>\n                    <Nav.Link href=\"#\" onClick={downloadPDFHandler}>Download</Nav.Link>\n                    <Nav.Link href=\"#\" onClick={onShowFormModal}>Reopen the form</Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n            <div inline>\n                <FormCheck inline\n                           type=\"checkbox\"\n                           label=\"Show me what it looks like when I'm dead\"\n                           value={showDataInPreview}\n                           onChange={handleCheckbox(onSetShowDataInPreview)}\n                />\n            </div>\n        </Navbar>\n    );\n}\n\nexport default EndowlNavbar;","import React, {useEffect, useState} from 'react';\nimport {Openlaw} from 'openlaw';\nimport Form from './Form';\nimport \"./App.css\";\nimport EndowlNavbar from \"./EndowlNavBar\";\nimport {debounce} from \"lodash\";\n\n// The preview renderer needs to live outside of a component so that it isn't re-instantiated every time it is executed\nconst renderPreviewHTML = debounce((formState, callback) => {\n    const {executionResult} = formState;\n    const {agreement} = Openlaw.getAgreements(executionResult)[0];\n\n    callback(Openlaw.renderForPreview(agreement, {}, {}));\n}, 300);\n\nconst findFields = /(<span class=\"markdown-variable.+?>).+?(<\\/span>)/g;\nconst fieldHidden = '$1<b>&lt;hidden&gt;</b>$2';\nconst findUnfilledValue = /\\[\\[.+?\\]\\]/g;\nconst unfilledValueReplacement = '<b>&lt;no value provided&gt;</b>';\n\nconst App = () => {\n    const [formState, liftFormState] = useState();\n    const [previewHTML, setPreviewHTML] = useState();\n    const [view, toggleView] = useState('source');\n    const [showHidden, setShowHidden] = useState(false);\n    const [showFormModal, setShowFormModal] = useState(true);\n\n    useEffect(() => {\n        if (formState) {\n            renderPreviewHTML(formState, html => {\n                if (!showHidden) {\n                    html = html.replaceAll(findFields, fieldHidden);\n                } else {\n                    html = html.replaceAll(findUnfilledValue, unfilledValueReplacement);\n                }\n                setPreviewHTML(html);\n            });\n            toggleView('preview');\n        }\n    }, [formState, showHidden]);\n\n    return (\n        <>\n            <EndowlNavbar\n                showDataInPreview={showHidden}\n                onSetShowDataInPreview={setShowHidden}\n                onShowFormModal={setShowFormModal}\n            />\n\n            {showFormModal &&\n            <div className=\"paneLeft\">\n                <Form\n                    stateLifter={liftFormState}\n                    show={showFormModal}\n                    setShow={setShowFormModal}\n                />\n            </div>\n            }\n\n            {/* PREVIEW */}\n            <div className=\"document-view paper\">\n                {(previewHTML && view === 'preview') && (\n                    <div id=\"document\" dangerouslySetInnerHTML={{__html: previewHTML}}/>\n                )}\n            </div>\n        </>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { attemptAuth } from './auth';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nattemptAuth();\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}